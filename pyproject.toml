[project]
name = "weareateam"
version = "0.1.0"
requires-python = ">=3.12"
readme = "README.md"
license = { file = "LICENSE" }
dependencies = [
  "aiogram==3.15.0",
  "aiogram-dialog==2.2.0",
  "aiohttp==3.10.11",
  "alembic==1.14.0",
  "apscheduler==3.11.0",
  "dishka==1.4.2",
  "psycopg[binary]==3.2.3",
  "pydantic==2.9.2",
  "pydantic-settings==2.6.1",
  "pypng==0.20220715.0",
  "qrcode==8.0",
  "sqlalchemy==2.0.36",
]

[tool.ruff]
line-length = 88
lint.select = [
  "F", # Pyflakes
  "E", # pycodestyle
  "W", # pycodestyle
  "UP", # pyupgrade
  "ANN", # flake8-annotations
  "ASYNC1", # flake8-trio
  "BLE", # flake8-blind-except
  "B", # flake8-bugbear
  "COM", # flake8-commas
  "C4", # flake8-comprehensions
  "PLC", # Pylint
  "ISC", # flake8-implicit-str-concat
  "INP", # flake8-no-pep420
  "PIE", # flake8-pie
  "Q", # flake8-quotes
  "RSE", # flake8-raise
  "RET", # flake8-return
  "SLF", # flake8-self
  "SIM", # flake8-simplify
  "FLY", # flynt
  "PERF", # Perflint
  "RUF", # Ruff-specific rules
  "T10", # flake8-debugger
  "T20", # flake8-print
]
lint.ignore = [
  "ANN101", # missing-type-self | Missing type annotation for {name} in method
  "ANN102", # missing-type-cls | Missing type annotation for {name} in classmethod
  "ANN401", # any-type | Dynamically typed expressions (typing.Any) are disallowed in {name}
  "UP038", # Use `X | Y` in `isinstance` call instead of `(X, Y)`
  "B905", # `zip()` without an explicit `strict=` parameter
  "RUF001", # ambiguous-unicode-character-string | String contains ambiguous {}. Did you mean {}?
  "RUF002", # ambiguous-unicode-character-docstring | Docstring contains ambiguous {}. Did you mean {}?
  "RUF003", # ambiguous-unicode-character-comment | Comment contains ambiguous {}. Did you mean {}?
  "UP042", # Class StrEnum inherits from both `str` and `enum.Enum`
  "SIM102", # Use a single `if` statement instead of nested `if` statements
]
src = ["bot", "core", "database", "db", "di", "migrations", "tools"]
exclude = [
  ".git",
  "build",
  "dist",
  "venv",
  ".venv",
  "*.egg-info",
  "*resources",
]
target-version = "py312"
indent-width = 4

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.black]
line-length = 88
target-version = ["py312"]
exclude = '''
(
    \.eggs
  | \.git
  | build
  | dist
  | venv
  | resources
)
'''

[tool.isort]
profile = "black"
line_length = 88

[tool.poetry.dev-dependencies]
pytest = "^7.2"
black = "^24.0"
isort = "^5.12.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
